/home/micucci/.cargo/bin/cargo test --color=always --package api-consumers --test load_test test_blast -- --nocapture --exact
    Finished test [unoptimized + debuginfo] target(s) in 0.18s
     Running target/debug/deps/load_test-d144683f928e3a80

running 1 test
2020-06-15 02:30:11+0000 INFO [warp::server] listening on http://0.0.0.0:28080
2020-06-15 02:30:11+0000 DEBUG [reqwest::connect] starting new connection: http://0.0.0.0:28080/
2020-06-15 02:30:11+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:11+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188211091329958 on thread 1592188211091648324
2020-06-15 02:30:11+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188211091652255 on thread 1592188211091648324
2020-06-15 02:30:11+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188211091329958/[("send_trace", "true")]
2020-06-15 02:30:11+0000 DEBUG [reqwest::async_impl::client] response '200 OK' for http://0.0.0.0:28080/healthz
2020-06-15 02:30:11+0000 DEBUG [http_server_warp::warp_serv] Warp server is ready on: 0.0.0.0:28080
2020-06-15 02:30:11+0000 INFO [warp::server] listening on http://0.0.0.0:28081
2020-06-15 02:30:11+0000 DEBUG [reqwest::connect] starting new connection: http://0.0.0.0:28081/
2020-06-15 02:30:11+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:11+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188211090986168 on thread 1592188211108403017
2020-06-15 02:30:11+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188211108409540 on thread 1592188211108403017
2020-06-15 02:30:11+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188211090986168/[("send_trace", "true")]
2020-06-15 02:30:11+0000 DEBUG [reqwest::async_impl::client] response '200 OK' for http://0.0.0.0:28081/healthz
2020-06-15 02:30:11+0000 DEBUG [http_server_warp::warp_serv] Warp server is ready on: 0.0.0.0:28081
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs:97:9
stack backtrace:
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs:97:9
2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs:97:9
2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs:97:9
2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs:97:9
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', 2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
tests/load_test.rs:97:9
2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs:97:9
2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs:97:9
2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs:97:9
2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
thread 'thread 'tokio-runtime-workertokio-runtime-worker' panicked at '' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', ', tests/load_test.rstests/load_test.rs::9797::99

2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
:97:9
2020-06-15 02:30:41+0000 TRACE [reqwest::client] response receiver is canceled
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:thread '104test_blast
' panicked at 'called `Result::unwrap()` on an `Err` value: JoinError::Panic(...)', tests/load_test.rs:88:9 
 29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188211090604364
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241294061776
Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
 2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241294061776 span-id:1592188241296493396] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
  6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188211090604364 span-id:1592188241296483200] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241294061776 span-id:1592188241296493396] [datadog_apm_sync::client] New span on trace: 1592188241294061776
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::test_blast::{{closure2020-06-15 02:30:41+0000 TRACE [trace-id:1592188211090604364 span-id:1592188241296483200] [datadog_apm_sync::client] New span on trace: 1592188211090604364
}}
             at tests/load_test.rs:88
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241294061776 span-id:1592188241296563686] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188211090604364 span-id:1592188241296572826] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241294061776, id: 1592188241296493396, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.296493832Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211090604364, id: 1592188241296483200, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.296483630Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241294061776/1592188241296493396
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211090604364/1592188241296483200
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241294061776 span-id:1592188241296563686] [authentication_config::http_auth] Starting up HTTP Auth on port [28082]
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188211090604364 span-id:1592188241296572826] [authentication_config::http_auth] Starting up HTTP Auth on port [28082]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241294061776, id: 1592188241296563686, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.296564125Z }
Launching Rocket server on:: 127.0.0.1:28082
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211090604364, id: 1592188241296572826, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.296573240Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211090604364/1592188241296572826
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241294061776/1592188241296563686
Launching Rocket server on:: 127.0.0.1:28082
  17: tokio::runtime::enter::Enter::block_on::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs:163
  18: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  19: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  20: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  21: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  22: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  23: tokio::runtime::enter::Enter::block_on2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188211079485355

             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs:163
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188211079485355 span-id:1592188241299155604] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188211079485355 span-id:1592188241299155604] [datadog_apm_sync::client] New span on trace: 1592188211079485355
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188211079485355 span-id:1592188241299208052] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211079485355, id: 1592188241299155604, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.299156034Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211079485355/1592188241299155604
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211079485355, id: 1592188241299208052, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.299208397Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211079485355/1592188241299208052
  24: tokio::runtime::thread_pool::ThreadPool::block_on
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/mod.rs:82
  25: tokio::runtime::Runtime::block_on::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs:446
  26: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  27: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  28: tokio::runtime::Runtime::block_on
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs:441
  29: load_test::test_blast
             at tests/load_test.rs:48
  30: load_test::test_blast::{{closure}}
             at tests/load_test.rs:48
  31: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  32: <alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once
             at /rustc/feb3536eba10c2e4585d066629598f03d5ddc7c6/src/liballoc/boxed.rs:1076
  33: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /rustc/feb3536eba10c2e4585d066629598f03d5ddc7c6/src/libstd/panic.rs:318
  34: std::panicking::try::do_call
             at /rustc/feb3536eba10c2e4585d066629598f03d5ddc7c6/src/libstd/panicking.rs:297
  35: std::panicking::try
             at /rustc/feb3536eba10c2e4585d066629598f03d5ddc7c6/src/libstd/panicking.rs:274
  36: std::panic::catch_unwind
             at /rustc/feb3536eba10c2e4585d066629598f03d5ddc7c6/src/libstd/panic.rs:394
  37: test::run_test_in_process
             at src/libtest/lib.rs:541
  38: test::run_test::run_test_inner::{{closure}}
             at src/libtest/lib.rs:450
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
Rocket server is ready on:: http://127.0.0.1:28082/
Rocket server is ready on:: http://127.0.0.1:28082/
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241292263818
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241292263818 span-id:1592188241321576050] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241292263818 span-id:1592188241321576050] [datadog_apm_sync::client] New span on trace: 1592188241292263818
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241292263818 span-id:1592188241321623689] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241292263818, id: 1592188241321576050, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.321576460Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241292263818/1592188241321576050
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241292263818, id: 1592188241321623689, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.321624096Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241292263818/1592188241321623689
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188211090604364 span-id:1592188241296572826] [datadog_apm_sync::client] New span on trace: 1592188211090604364
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241294061776 span-id:1592188241296563686] [datadog_apm_sync::client] New span on trace: 1592188241294061776
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211090604364, id: 1592188241326198845, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.326199779Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211090604364/1592188241326198845
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241294061776, id: 1592188241326238580, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.326239267Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241294061776/1592188241326238580
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188211079485355 span-id:1592188241299208052] [datadog_apm_sync::client] New span on trace: 1592188211079485355
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211079485355, id: 1592188241326688273, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.326689226Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211079485355/1592188241326688273
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241292263818 span-id:1592188241321623689] [datadog_apm_sync::client] New span on trace: 1592188241292263818
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241292263818, id: 1592188241327630022, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.327630558Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241292263818/1592188241327630022
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241294061776/1592188241326238580
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241294061776/1592188241326238580
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241294061776/1592188241296563686
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241294061776/1592188241296563686
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241294061776/1592188241296493396
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241294061776/1592188241296493396
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241294061776
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241294061776
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241294061776 span-id:1592188241329637091] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211090604364/1592188241326198845
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211090604364/1592188241326198845
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241294061776, id: 1592188241329583048, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.329583559Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241294061776/1592188241329583048
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188211090604364
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241294061776/1592188241329583048
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241294061776/1592188241329583048
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241294061776, id: 1592188241329637091, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.329637565Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241294061776/1592188241329637091
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211090604364/1592188241296572826
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188211090604364
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241292263818
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211090604364/1592188241296572826
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211090604364/1592188241296483200
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188211090604364 span-id:1592188241329899118] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211090604364/1592188241296483200
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241292263818
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241292263818 span-id:1592188241329936047] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241292263818/1592188241327630022
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241292263818/1592188241327630022
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188211079485355
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241292263818/1592188241321623689
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241292263818/1592188241321623689
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188211079485355
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188211079485355 span-id:1592188241330239747] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211090604364, id: 1592188241329807402, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.329808059Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241292263818/1592188241321576050
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241292263818/1592188241321576050
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211090604364/1592188241329807402
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211090604364/1592188241329807402
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211090604364/1592188241329807402
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211090604364, id: 1592188241329899118, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.329899781Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241292263818, id: 1592188241329907082, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.329907384Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211090604364/1592188241329899118
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241292263818/1592188241329907082
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241292263818/1592188241329907082
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241292263818/1592188241329907082
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241292263818, id: 1592188241329936047, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.329936336Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241292263818/1592188241329936047
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211079485355/1592188241326688273
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211079485355/1592188241326688273
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211079485355/1592188241299208052
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211079485355/1592188241299208052
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211079485355/1592188241299155604
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211079485355/1592188241299155604
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211079485355, id: 1592188241330167068, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.330167699Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211079485355/1592188241330167068
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211079485355/1592188241330167068
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211079485355/1592188241330167068
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211079485355, id: 1592188241330239747, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.330240217Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211079485355/1592188241330239747
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241292263818 span-id:1592188241329936047] [datadog_apm_sync::client] New span on trace: 1592188241292263818
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241292263818 span-id:1592188241329936047] [api_consumers::graphql] In trace id: 1592188241292263818 on thread 1592188241344145101
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241292263818, id: 1592188241344139618, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.344139915Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241292263818/1592188241344139618
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241292263818/1592188241344139618
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241292263818/1592188241344139618
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241292263818/1592188241329936047
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241292263818 on thread 1592188241344145101
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241346138001 on thread 1592188241344145101
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241292263818/1592188241329936047
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241292263818/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241327630022, trace_id: 1592188241292263818, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241321623689), start: 2020-06-15T02:30:41.327630558Z, duration: Duration { secs: 0, nanos: 2117468 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241321623689, trace_id: 1592188241292263818, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241321576050), start: 2020-06-15T02:30:41.321624096Z, duration: Duration { secs: 0, nanos: 8185288 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241321576050, trace_id: 1592188241292263818, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241321693044), start: 2020-06-15T02:30:41.321576460Z, duration: Duration { secs: 0, nanos: 8255815 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241329907082, trace_id: 1592188241292263818, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241321693044), start: 2020-06-15T02:30:41.329907384Z, duration: Duration { secs: 0, nanos: 14492 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241344139618, trace_id: 1592188241292263818, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241329936047), start: 2020-06-15T02:30:41.344139915Z, duration: Duration { secs: 0, nanos: 16551 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241329936047, trace_id: 1592188241292263818, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241321693044), start: 2020-06-15T02:30:41.329936336Z, duration: Duration { secs: 0, nanos: 16149321 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241321693044, trace_id: 1592188241292263818, name: "1592188241292263818-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.321576460Z, duration: Duration { secs: 0, nanos: 24722891 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 DEBUG [reqwest::async_impl::response] Response: '200 OK' for http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241292263818,\"span_id\":1592188241327630022,\"parent_id\":1592188241321623689,\"start\":1592188241327630558,\"duration\":2117468,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241292263818,\"span_id\":1592188241321623689,\"parent_id\":1592188241321576050,\"start\":1592188241321624096,\"duration\":8185288,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241292263818,\"span_id\":1592188241321576050,\"parent_id\":1592188241321693044,\"start\":1592188241321576460,\"duration\":8255815,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241292263818,\"span_id\":1592188241329907082,\"parent_id\":1592188241321693044,\"start\":1592188241329907384,\"duration\":14492,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241292263818,\"span_id\":1592188241344139618,\"parent_id\":1592188241329936047,\"start\":1592188241344139915,\"duration\":16551,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241292263818,\"span_id\":1592188241329936047,\"parent_id\":1592188241321693044,\"start\":1592188241329936336,\"duration\":16149321,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241292263818-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241292263818,\"span_id\":1592188241321693044,\"parent_id\":null,\"start\":1592188241321576460,\"duration\":24722891,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241346138001
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241346138001 span-id:1592188241347809439] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241346138001 span-id:1592188241347809439] [datadog_apm_sync::client] New span on trace: 1592188241346138001
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241346138001 span-id:1592188241347825419] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241346138001, id: 1592188241347809439, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.347809712Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241346138001/1592188241347809439
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241346138001, id: 1592188241347825419, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.347825695Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241346138001/1592188241347825419
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241346138001 span-id:1592188241347825419] [datadog_apm_sync::client] New span on trace: 1592188241346138001
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241346138001, id: 1592188241351884889, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.351885248Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241346138001/1592188241351884889
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241294061776 span-id:1592188241329637091] [datadog_apm_sync::client] New span on trace: 1592188241294061776
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241294061776 span-id:1592188241329637091] [api_consumers::graphql] In trace id: 1592188241294061776 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241294061776, id: 1592188241352861498, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.352862240Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241294061776/1592188241352861498
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241294061776/1592188241352861498
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241294061776/1592188241352861498
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241346138001/1592188241351884889
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241346138001/1592188241351884889
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241346138001/1592188241347825419
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241346138001/1592188241347825419
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241346138001/1592188241347809439
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241346138001/1592188241347809439
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241346138001
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241346138001
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241346138001 span-id:1592188241353729401] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241346138001, id: 1592188241353683984, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.353684503Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241346138001/1592188241353683984
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241346138001/1592188241353683984
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241346138001/1592188241353683984
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241346138001, id: 1592188241353729401, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.353730Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241346138001/1592188241353729401
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241294061776/1592188241329637091
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241294061776/1592188241329637091
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241294061776 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241355845322 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241294061776/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241326238580, trace_id: 1592188241294061776, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241296563686), start: 2020-06-15T02:30:41.326239267Z, duration: Duration { secs: 0, nanos: 3091729 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241296563686, trace_id: 1592188241294061776, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241296493396), start: 2020-06-15T02:30:41.296564125Z, duration: Duration { secs: 0, nanos: 32843685 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241296493396, trace_id: 1592188241294061776, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241296604904), start: 2020-06-15T02:30:41.296493832Z, duration: Duration { secs: 0, nanos: 32945519 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241329583048, trace_id: 1592188241294061776, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241296604904), start: 2020-06-15T02:30:41.329583559Z, duration: Duration { secs: 0, nanos: 22972 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241352861498, trace_id: 1592188241294061776, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241329637091), start: 2020-06-15T02:30:41.352862240Z, duration: Duration { secs: 0, nanos: 25940 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241329637091, trace_id: 1592188241294061776, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241296604904), start: 2020-06-15T02:30:41.329637565Z, duration: Duration { secs: 0, nanos: 26160726 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241296604904, trace_id: 1592188241294061776, name: "1592188241294061776-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.296493832Z, duration: Duration { secs: 0, nanos: 59500758 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241294061776,\"span_id\":1592188241326238580,\"parent_id\":1592188241296563686,\"start\":1592188241326239267,\"duration\":3091729,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241294061776,\"span_id\":1592188241296563686,\"parent_id\":1592188241296493396,\"start\":1592188241296564125,\"duration\":32843685,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241294061776,\"span_id\":1592188241296493396,\"parent_id\":1592188241296604904,\"start\":1592188241296493832,\"duration\":32945519,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241294061776,\"span_id\":1592188241329583048,\"parent_id\":1592188241296604904,\"start\":1592188241329583559,\"duration\":22972,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241294061776,\"span_id\":1592188241352861498,\"parent_id\":1592188241329637091,\"start\":1592188241352862240,\"duration\":25940,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241294061776,\"span_id\":1592188241329637091,\"parent_id\":1592188241296604904,\"start\":1592188241329637565,\"duration\":26160726,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241294061776-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241294061776,\"span_id\":1592188241296604904,\"parent_id\":null,\"start\":1592188241296493832,\"duration\":59500758,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241355845322
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241355845322 span-id:1592188241356587184] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241355845322 span-id:1592188241356587184] [datadog_apm_sync::client] New span on trace: 1592188241355845322
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241355845322 span-id:1592188241356602727] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188211090604364 span-id:1592188241329899118] [datadog_apm_sync::client] New span on trace: 1592188211090604364
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188211090604364 span-id:1592188241329899118] [api_consumers::graphql] In trace id: 1592188211090604364 on thread 1592188241357466594
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241355845322, id: 1592188241356587184, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.356587489Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241355845322/1592188241356587184
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241355845322, id: 1592188241356602727, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.356603012Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241355845322/1592188241356602727
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188211079485355 span-id:1592188241330239747] [datadog_apm_sync::client] New span on trace: 1592188211079485355
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188211079485355 span-id:1592188241330239747] [api_consumers::graphql] In trace id: 1592188211079485355 on thread 1592188241358284514
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211090604364, id: 1592188241357442886, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.357443406Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211090604364/1592188241357442886
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211090604364/1592188241357442886
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211090604364/1592188241357442886
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188211079485355, id: 1592188241358276735, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.358277297Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188211079485355/1592188241358276735
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211079485355/1592188241358276735
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211079485355/1592188241358276735
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188211090604364 on thread 1592188241357466594
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241359683616 on thread 1592188241357466594
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211090604364/1592188241329899118
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211090604364/1592188241329899118
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188211090604364/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241326198845, trace_id: 1592188211090604364, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241296572826), start: 2020-06-15T02:30:41.326199779Z, duration: Duration { secs: 0, nanos: 3367229 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241296572826, trace_id: 1592188211090604364, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241296483200), start: 2020-06-15T02:30:41.296573240Z, duration: Duration { secs: 0, nanos: 33079322 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241296483200, trace_id: 1592188211090604364, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241296665554), start: 2020-06-15T02:30:41.296483630Z, duration: Duration { secs: 0, nanos: 33180179 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241329807402, trace_id: 1592188211090604364, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241296665554), start: 2020-06-15T02:30:41.329808059Z, duration: Duration { secs: 0, nanos: 58109 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241357442886, trace_id: 1592188211090604364, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241329899118), start: 2020-06-15T02:30:41.357443406Z, duration: Duration { secs: 0, nanos: 39758 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241329899118, trace_id: 1592188211090604364, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241296665554), start: 2020-06-15T02:30:41.329899781Z, duration: Duration { secs: 0, nanos: 29748679 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241296665554, trace_id: 1592188211090604364, name: "1592188211090604364-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.296483630Z, duration: Duration { secs: 0, nanos: 63326682 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188211079485355 on thread 1592188241358284514
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241360041040 on thread 1592188241358284514
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241355845322 span-id:1592188241356602727] [datadog_apm_sync::client] New span on trace: 1592188241355845322
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188211090604364,\"span_id\":1592188241326198845,\"parent_id\":1592188241296572826,\"start\":1592188241326199779,\"duration\":3367229,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188211090604364,\"span_id\":1592188241296572826,\"parent_id\":1592188241296483200,\"start\":1592188241296573240,\"duration\":33079322,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188211090604364,\"span_id\":1592188241296483200,\"parent_id\":1592188241296665554,\"start\":1592188241296483630,\"duration\":33180179,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188211090604364,\"span_id\":1592188241329807402,\"parent_id\":1592188241296665554,\"start\":1592188241329808059,\"duration\":58109,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188211090604364,\"span_id\":1592188241357442886,\"parent_id\":1592188241329899118,\"start\":1592188241357443406,\"duration\":39758,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188211090604364,\"span_id\":1592188241329899118,\"parent_id\":1592188241296665554,\"start\":1592188241329899781,\"duration\":29748679,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188211090604364-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188211090604364,\"span_id\":1592188241296665554,\"parent_id\":null,\"start\":1592188241296483630,\"duration\":63326682,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241359683616
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241359683616 span-id:1592188241360607377] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241359683616 span-id:1592188241360607377] [datadog_apm_sync::client] New span on trace: 1592188241359683616
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241359683616 span-id:1592188241360634586] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241360041040
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241360041040 span-id:1592188241360807287] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241360041040 span-id:1592188241360807287] [datadog_apm_sync::client] New span on trace: 1592188241360041040
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241360041040 span-id:1592188241360866877] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188211079485355/1592188241330239747
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188211079485355/1592188241330239747
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188211079485355/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241326688273, trace_id: 1592188211079485355, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241299208052), start: 2020-06-15T02:30:41.326689226Z, duration: Duration { secs: 0, nanos: 3267936 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241299208052, trace_id: 1592188211079485355, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241299155604), start: 2020-06-15T02:30:41.299208397Z, duration: Duration { secs: 0, nanos: 30831712 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241299155604, trace_id: 1592188211079485355, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241299233831), start: 2020-06-15T02:30:41.299156034Z, duration: Duration { secs: 0, nanos: 30894253 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241330167068, trace_id: 1592188211079485355, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241299233831), start: 2020-06-15T02:30:41.330167699Z, duration: Duration { secs: 0, nanos: 39944 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241358276735, trace_id: 1592188211079485355, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241330239747), start: 2020-06-15T02:30:41.358277297Z, duration: Duration { secs: 0, nanos: 23138 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241330239747, trace_id: 1592188211079485355, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241299233831), start: 2020-06-15T02:30:41.330240217Z, duration: Duration { secs: 0, nanos: 29720062 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241299233831, trace_id: 1592188211079485355, name: "1592188211079485355-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.299156034Z, duration: Duration { secs: 0, nanos: 62789071 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241355845322
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241355845322
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241355845322 span-id:1592188241362287474] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188211079485355,\"span_id\":1592188241326688273,\"parent_id\":1592188241299208052,\"start\":1592188241326689226,\"duration\":3267936,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188211079485355,\"span_id\":1592188241299208052,\"parent_id\":1592188241299155604,\"start\":1592188241299208397,\"duration\":30831712,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188211079485355,\"span_id\":1592188241299155604,\"parent_id\":1592188241299233831,\"start\":1592188241299156034,\"duration\":30894253,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188211079485355,\"span_id\":1592188241330167068,\"parent_id\":1592188241299233831,\"start\":1592188241330167699,\"duration\":39944,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188211079485355,\"span_id\":1592188241358276735,\"parent_id\":1592188241330239747,\"start\":1592188241358277297,\"duration\":23138,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188211079485355,\"span_id\":1592188241330239747,\"parent_id\":1592188241299233831,\"start\":1592188241330240217,\"duration\":29720062,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188211079485355-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188211079485355,\"span_id\":1592188241299233831,\"parent_id\":null,\"start\":1592188241299156034,\"duration\":62789071,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241355845322, id: 1592188241360103221, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.360103624Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241355845322/1592188241360103221
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241359683616, id: 1592188241360607377, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.360607762Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241359683616/1592188241360607377
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241359683616, id: 1592188241360634586, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.360634935Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241359683616/1592188241360634586
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241360041040, id: 1592188241360807287, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.360807736Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241360041040/1592188241360807287
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241360041040, id: 1592188241360866877, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.360867328Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241360041040/1592188241360866877
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241359683616 span-id:1592188241360634586] [datadog_apm_sync::client] New span on trace: 1592188241359683616
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241355845322/1592188241360103221
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241355845322/1592188241360103221
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241355845322/1592188241356602727
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241355845322/1592188241356602727
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241355845322/1592188241356587184
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241355845322/1592188241356587184
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241355845322, id: 1592188241362244091, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.362244431Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241355845322/1592188241362244091
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241355845322/1592188241362244091
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241355845322/1592188241362244091
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241355845322, id: 1592188241362287474, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.362287811Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241355845322/1592188241362287474
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241360041040 span-id:1592188241360866877] [datadog_apm_sync::client] New span on trace: 1592188241360041040
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241359683616, id: 1592188241364245256, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.364245702Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241359683616/1592188241364245256
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241359683616
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241359683616
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241359683616 span-id:1592188241366193607] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241360041040, id: 1592188241364959693, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.364960172Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241360041040/1592188241364959693
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241359683616/1592188241364245256
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241359683616/1592188241364245256
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241359683616/1592188241360634586
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241359683616/1592188241360634586
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241359683616/1592188241360607377
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241359683616/1592188241360607377
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241359683616, id: 1592188241366151566, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.366152011Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241359683616/1592188241366151566
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241359683616/1592188241366151566
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241359683616/1592188241366151566
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241360041040
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241359683616, id: 1592188241366193607, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.366194023Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241359683616/1592188241366193607
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241360041040
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241360041040 span-id:1592188241366788619] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241360041040/1592188241364959693
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241360041040/1592188241364959693
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241360041040/1592188241360866877
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241360041040/1592188241360866877
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241360041040/1592188241360807287
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241360041040/1592188241360807287
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241360041040, id: 1592188241366750932, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.366751442Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241360041040/1592188241366750932
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241360041040/1592188241366750932
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241360041040/1592188241366750932
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241360041040, id: 1592188241366788619, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.366789048Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241360041040/1592188241366788619
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241346138001 span-id:1592188241353729401] [datadog_apm_sync::client] New span on trace: 1592188241346138001
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241346138001 span-id:1592188241353729401] [api_consumers::graphql] In trace id: 1592188241346138001 on thread 1592188241344145101
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241346138001, id: 1592188241371121765, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.371122180Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241346138001/1592188241371121765
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241346138001/1592188241371121765
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241346138001/1592188241371121765
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241346138001/1592188241353729401
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241346138001/1592188241353729401
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241346138001 on thread 1592188241344145101
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241372859618 on thread 1592188241344145101
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241346138001/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241351884889, trace_id: 1592188241346138001, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241347825419), start: 2020-06-15T02:30:41.351885248Z, duration: Duration { secs: 0, nanos: 1637431 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241347825419, trace_id: 1592188241346138001, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241347809439), start: 2020-06-15T02:30:41.347825695Z, duration: Duration { secs: 0, nanos: 5742792 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241347809439, trace_id: 1592188241346138001, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241349224767), start: 2020-06-15T02:30:41.347809712Z, duration: Duration { secs: 0, nanos: 5763208 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241353683984, trace_id: 1592188241346138001, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241349224767), start: 2020-06-15T02:30:41.353684503Z, duration: Duration { secs: 0, nanos: 23348 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241371121765, trace_id: 1592188241346138001, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241353729401), start: 2020-06-15T02:30:41.371122180Z, duration: Duration { secs: 0, nanos: 20601 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241353729401, trace_id: 1592188241346138001, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241349224767), start: 2020-06-15T02:30:41.353730Z, duration: Duration { secs: 0, nanos: 19079094 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241349224767, trace_id: 1592188241346138001, name: "1592188241346138001-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.347809712Z, duration: Duration { secs: 0, nanos: 25226632 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241346138001,\"span_id\":1592188241351884889,\"parent_id\":1592188241347825419,\"start\":1592188241351885248,\"duration\":1637431,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241346138001,\"span_id\":1592188241347825419,\"parent_id\":1592188241347809439,\"start\":1592188241347825695,\"duration\":5742792,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241346138001,\"span_id\":1592188241347809439,\"parent_id\":1592188241349224767,\"start\":1592188241347809712,\"duration\":5763208,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241346138001,\"span_id\":1592188241353683984,\"parent_id\":1592188241349224767,\"start\":1592188241353684503,\"duration\":23348,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241346138001,\"span_id\":1592188241371121765,\"parent_id\":1592188241353729401,\"start\":1592188241371122180,\"duration\":20601,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241346138001,\"span_id\":1592188241353729401,\"parent_id\":1592188241349224767,\"start\":1592188241353730000,\"duration\":19079094,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241346138001-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241346138001,\"span_id\":1592188241349224767,\"parent_id\":null,\"start\":1592188241347809712,\"duration\":25226632,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241372859618
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241372859618 span-id:1592188241373788442] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241372859618 span-id:1592188241373788442] [datadog_apm_sync::client] New span on trace: 1592188241372859618
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241372859618 span-id:1592188241373811431] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241372859618, id: 1592188241373788442, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.373788875Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241372859618/1592188241373788442
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241372859618, id: 1592188241373811431, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.373811800Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241372859618/1592188241373811431
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241355845322 span-id:1592188241362287474] [datadog_apm_sync::client] New span on trace: 1592188241355845322
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241355845322 span-id:1592188241362287474] [api_consumers::graphql] In trace id: 1592188241355845322 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241355845322, id: 1592188241375498258, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.375498634Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241355845322/1592188241375498258
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241355845322/1592188241375498258
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241355845322/1592188241375498258
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241372859618 span-id:1592188241373811431] [datadog_apm_sync::client] New span on trace: 1592188241372859618
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241355845322/1592188241362287474
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241355845322/1592188241362287474
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241355845322 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241377403775 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241372859618, id: 1592188241377366818, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.377367120Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241372859618/1592188241377366818
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241355845322/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241360103221, trace_id: 1592188241355845322, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241356602727), start: 2020-06-15T02:30:41.360103624Z, duration: Duration { secs: 0, nanos: 1963644 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241356602727, trace_id: 1592188241355845322, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241356587184), start: 2020-06-15T02:30:41.356603012Z, duration: Duration { secs: 0, nanos: 5529502 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241356587184, trace_id: 1592188241355845322, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241357962213), start: 2020-06-15T02:30:41.356587489Z, duration: Duration { secs: 0, nanos: 5551686 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241362244091, trace_id: 1592188241355845322, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241357962213), start: 2020-06-15T02:30:41.362244431Z, duration: Duration { secs: 0, nanos: 24664 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241375498258, trace_id: 1592188241355845322, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241362287474), start: 2020-06-15T02:30:41.375498634Z, duration: Duration { secs: 0, nanos: 22386 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241362287474, trace_id: 1592188241355845322, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241357962213), start: 2020-06-15T02:30:41.362287811Z, duration: Duration { secs: 0, nanos: 15074135 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241357962213, trace_id: 1592188241355845322, name: "1592188241355845322-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.356587489Z, duration: Duration { secs: 0, nanos: 21095041 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241377403775
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241377403775 span-id:1592188241378155420] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241377403775 span-id:1592188241378155420] [datadog_apm_sync::client] New span on trace: 1592188241377403775
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241377403775 span-id:1592188241378172237] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241355845322,\"span_id\":1592188241360103221,\"parent_id\":1592188241356602727,\"start\":1592188241360103624,\"duration\":1963644,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241355845322,\"span_id\":1592188241356602727,\"parent_id\":1592188241356587184,\"start\":1592188241356603012,\"duration\":5529502,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241355845322,\"span_id\":1592188241356587184,\"parent_id\":1592188241357962213,\"start\":1592188241356587489,\"duration\":5551686,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241355845322,\"span_id\":1592188241362244091,\"parent_id\":1592188241357962213,\"start\":1592188241362244431,\"duration\":24664,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241355845322,\"span_id\":1592188241375498258,\"parent_id\":1592188241362287474,\"start\":1592188241375498634,\"duration\":22386,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241355845322,\"span_id\":1592188241362287474,\"parent_id\":1592188241357962213,\"start\":1592188241362287811,\"duration\":15074135,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241355845322-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241355845322,\"span_id\":1592188241357962213,\"parent_id\":null,\"start\":1592188241356587489,\"duration\":21095041,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241372859618
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241372859618
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241372859618 span-id:1592188241378805265] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241377403775, id: 1592188241378155420, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.378155785Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241377403775/1592188241378155420
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241377403775, id: 1592188241378172237, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.378172597Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241377403775/1592188241378172237
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241372859618/1592188241377366818
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241372859618/1592188241377366818
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241372859618/1592188241373811431
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241372859618/1592188241373811431
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241372859618/1592188241373788442
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241372859618/1592188241373788442
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241372859618, id: 1592188241378756252, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.378756738Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241372859618/1592188241378756252
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241372859618/1592188241378756252
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241372859618/1592188241378756252
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241372859618, id: 1592188241378805265, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.378805775Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241372859618/1592188241378805265
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241377403775 span-id:1592188241378172237] [datadog_apm_sync::client] New span on trace: 1592188241377403775
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241377403775, id: 1592188241381601868, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.381602263Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241377403775/1592188241381601868
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241377403775/1592188241381601868
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241377403775/1592188241381601868
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241377403775
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241377403775
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241377403775/1592188241378172237
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241377403775 span-id:1592188241383196341] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241377403775/1592188241378172237
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241377403775/1592188241378155420
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241377403775/1592188241378155420
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241377403775, id: 1592188241383165317, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.383165688Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241377403775/1592188241383165317
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241377403775/1592188241383165317
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241377403775/1592188241383165317
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241377403775, id: 1592188241383196341, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.383196688Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241377403775/1592188241383196341
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241360041040 span-id:1592188241366788619] [datadog_apm_sync::client] New span on trace: 1592188241360041040
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241360041040 span-id:1592188241366788619] [api_consumers::graphql] In trace id: 1592188241360041040 on thread 1592188241358284514
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241360041040, id: 1592188241384801557, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.384801926Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241360041040/1592188241384801557
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241360041040/1592188241384801557
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241360041040/1592188241384801557
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241359683616 span-id:1592188241366193607] [datadog_apm_sync::client] New span on trace: 1592188241359683616
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241359683616 span-id:1592188241366193607] [api_consumers::graphql] In trace id: 1592188241359683616 on thread 1592188241357466594
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241359683616, id: 1592188241386356480, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.386356876Z }
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241359683616/1592188241386356480
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241359683616/1592188241386356480
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241359683616/1592188241386356480
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241360041040 on thread 1592188241358284514
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241386519731 on thread 1592188241358284514
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241360041040/1592188241366788619
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241360041040/1592188241366788619
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241360041040/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241364959693, trace_id: 1592188241360041040, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241360866877), start: 2020-06-15T02:30:41.364960172Z, duration: Duration { secs: 0, nanos: 1651443 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241360866877, trace_id: 1592188241360041040, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241360807287), start: 2020-06-15T02:30:41.360867328Z, duration: Duration { secs: 0, nanos: 5795045 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241360807287, trace_id: 1592188241360041040, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241363978492), start: 2020-06-15T02:30:41.360807736Z, duration: Duration { secs: 0, nanos: 5859083 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241366750932, trace_id: 1592188241360041040, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241363978492), start: 2020-06-15T02:30:41.366751442Z, duration: Duration { secs: 0, nanos: 18404 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241384801557, trace_id: 1592188241360041040, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241366788619), start: 2020-06-15T02:30:41.384801926Z, duration: Duration { secs: 0, nanos: 16160 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241366788619, trace_id: 1592188241360041040, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241363978492), start: 2020-06-15T02:30:41.366789048Z, duration: Duration { secs: 0, nanos: 19671982 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241363978492, trace_id: 1592188241360041040, name: "1592188241360041040-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.360807736Z, duration: Duration { secs: 0, nanos: 25925976 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241360041040,\"span_id\":1592188241364959693,\"parent_id\":1592188241360866877,\"start\":1592188241364960172,\"duration\":1651443,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241360041040,\"span_id\":1592188241360866877,\"parent_id\":1592188241360807287,\"start\":1592188241360867328,\"duration\":5795045,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241360041040,\"span_id\":1592188241360807287,\"parent_id\":1592188241363978492,\"start\":1592188241360807736,\"duration\":5859083,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241360041040,\"span_id\":1592188241366750932,\"parent_id\":1592188241363978492,\"start\":1592188241366751442,\"duration\":18404,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241360041040,\"span_id\":1592188241384801557,\"parent_id\":1592188241366788619,\"start\":1592188241384801926,\"duration\":16160,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241360041040,\"span_id\":1592188241366788619,\"parent_id\":1592188241363978492,\"start\":1592188241366789048,\"duration\":19671982,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241360041040-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241360041040,\"span_id\":1592188241363978492,\"parent_id\":null,\"start\":1592188241360807736,\"duration\":25925976,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241386519731
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241386519731 span-id:1592188241387356418] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241386519731 span-id:1592188241387356418] [datadog_apm_sync::client] New span on trace: 1592188241386519731
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241386519731 span-id:1592188241387373744] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241386519731, id: 1592188241387356418, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.387356770Z }
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241386519731/1592188241387356418
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241359683616 on thread 1592188241357466594
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241388493896 on thread 1592188241357466594
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241386519731, id: 1592188241387373744, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.387374091Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241386519731/1592188241387373744
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241359683616/1592188241366193607
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241359683616/1592188241366193607
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241359683616/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241364245256, trace_id: 1592188241359683616, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241360634586), start: 2020-06-15T02:30:41.364245702Z, duration: Duration { secs: 0, nanos: 1737210 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241360634586, trace_id: 1592188241359683616, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241360607377), start: 2020-06-15T02:30:41.360634935Z, duration: Duration { secs: 0, nanos: 5409780 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241360607377, trace_id: 1592188241359683616, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241363736136), start: 2020-06-15T02:30:41.360607762Z, duration: Duration { secs: 0, nanos: 5446747 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241366151566, trace_id: 1592188241359683616, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241363736136), start: 2020-06-15T02:30:41.366152011Z, duration: Duration { secs: 0, nanos: 20894 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241386356480, trace_id: 1592188241359683616, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241366193607), start: 2020-06-15T02:30:41.386356876Z, duration: Duration { secs: 0, nanos: 14165 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241366193607, trace_id: 1592188241359683616, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241363736136), start: 2020-06-15T02:30:41.366194023Z, duration: Duration { secs: 0, nanos: 22257940 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241363736136, trace_id: 1592188241359683616, name: "1592188241359683616-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.360607762Z, duration: Duration { secs: 0, nanos: 28354084 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241388493896
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241388493896 span-id:1592188241389237258] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241388493896 span-id:1592188241389237258] [datadog_apm_sync::client] New span on trace: 1592188241388493896
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241388493896 span-id:1592188241389262591] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241359683616,\"span_id\":1592188241364245256,\"parent_id\":1592188241360634586,\"start\":1592188241364245702,\"duration\":1737210,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241359683616,\"span_id\":1592188241360634586,\"parent_id\":1592188241360607377,\"start\":1592188241360634935,\"duration\":5409780,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241359683616,\"span_id\":1592188241360607377,\"parent_id\":1592188241363736136,\"start\":1592188241360607762,\"duration\":5446747,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241359683616,\"span_id\":1592188241366151566,\"parent_id\":1592188241363736136,\"start\":1592188241366152011,\"duration\":20894,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241359683616,\"span_id\":1592188241386356480,\"parent_id\":1592188241366193607,\"start\":1592188241386356876,\"duration\":14165,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241359683616,\"span_id\":1592188241366193607,\"parent_id\":1592188241363736136,\"start\":1592188241366194023,\"duration\":22257940,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241359683616-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241359683616,\"span_id\":1592188241363736136,\"parent_id\":null,\"start\":1592188241360607762,\"duration\":28354084,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241386519731 span-id:1592188241387373744] [datadog_apm_sync::client] New span on trace: 1592188241386519731
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241388493896, id: 1592188241389237258, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.389237748Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241388493896/1592188241389237258
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241388493896, id: 1592188241389262591, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.389262927Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241388493896/1592188241389262591
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241388493896 span-id:1592188241389262591] [datadog_apm_sync::client] New span on trace: 1592188241388493896
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241386519731
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241386519731
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241386519731 span-id:1592188241393474708] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241386519731, id: 1592188241391584774, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.391585213Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241386519731/1592188241391584774
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241386519731/1592188241391584774
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241386519731/1592188241391584774
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241386519731/1592188241387373744
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241386519731/1592188241387373744
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241386519731/1592188241387356418
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241386519731/1592188241387356418
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241388493896, id: 1592188241393394941, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.393395430Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241388493896/1592188241393394941
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241386519731, id: 1592188241393434879, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.393435296Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241386519731/1592188241393434879
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241386519731/1592188241393434879
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241386519731/1592188241393434879
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241388493896
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241388493896
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241388493896 span-id:1592188241395186027] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241386519731, id: 1592188241393474708, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.393475100Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241386519731/1592188241393474708
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241388493896/1592188241393394941
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241388493896/1592188241393394941
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241388493896/1592188241389262591
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241388493896/1592188241389262591
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241388493896/1592188241389237258
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241388493896/1592188241389237258
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241388493896, id: 1592188241395155958, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.395156306Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241388493896/1592188241395155958
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241388493896/1592188241395155958
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241388493896/1592188241395155958
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241388493896, id: 1592188241395186027, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.395186358Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241388493896/1592188241395186027
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241377403775 span-id:1592188241383196341] [datadog_apm_sync::client] New span on trace: 1592188241377403775
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241377403775 span-id:1592188241383196341] [api_consumers::graphql] In trace id: 1592188241377403775 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241377403775, id: 1592188241401758816, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.401759396Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241377403775/1592188241401758816
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241377403775/1592188241401758816
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241377403775/1592188241401758816
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241372859618 span-id:1592188241378805265] [datadog_apm_sync::client] New span on trace: 1592188241372859618
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241372859618 span-id:1592188241378805265] [api_consumers::graphql] In trace id: 1592188241372859618 on thread 1592188241344145101
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241372859618, id: 1592188241403223550, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.403223896Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241372859618/1592188241403223550
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241372859618/1592188241403223550
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241372859618/1592188241403223550
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241377403775/1592188241383196341
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241377403775 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241403758513 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241377403775/1592188241383196341
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241377403775/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241381601868, trace_id: 1592188241377403775, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241378172237), start: 2020-06-15T02:30:41.381602263Z, duration: Duration { secs: 0, nanos: 1428838 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241378172237, trace_id: 1592188241377403775, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241378155420), start: 2020-06-15T02:30:41.378172597Z, duration: Duration { secs: 0, nanos: 4907470 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241378155420, trace_id: 1592188241377403775, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241379853022), start: 2020-06-15T02:30:41.378155785Z, duration: Duration { secs: 0, nanos: 4928662 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241383165317, trace_id: 1592188241377403775, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241379853022), start: 2020-06-15T02:30:41.383165688Z, duration: Duration { secs: 0, nanos: 15778 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241401758816, trace_id: 1592188241377403775, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241383196341), start: 2020-06-15T02:30:41.401759396Z, duration: Duration { secs: 0, nanos: 23189 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241383196341, trace_id: 1592188241377403775, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241379853022), start: 2020-06-15T02:30:41.383196688Z, duration: Duration { secs: 0, nanos: 20506269 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241379853022, trace_id: 1592188241377403775, name: "1592188241377403775-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.378155785Z, duration: Duration { secs: 0, nanos: 25760366 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241377403775,\"span_id\":1592188241381601868,\"parent_id\":1592188241378172237,\"start\":1592188241381602263,\"duration\":1428838,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241377403775,\"span_id\":1592188241378172237,\"parent_id\":1592188241378155420,\"start\":1592188241378172597,\"duration\":4907470,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241377403775,\"span_id\":1592188241378155420,\"parent_id\":1592188241379853022,\"start\":1592188241378155785,\"duration\":4928662,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241377403775,\"span_id\":1592188241383165317,\"parent_id\":1592188241379853022,\"start\":1592188241383165688,\"duration\":15778,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241377403775,\"span_id\":1592188241401758816,\"parent_id\":1592188241383196341,\"start\":1592188241401759396,\"duration\":23189,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241377403775,\"span_id\":1592188241383196341,\"parent_id\":1592188241379853022,\"start\":1592188241383196688,\"duration\":20506269,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241377403775-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241377403775,\"span_id\":1592188241379853022,\"parent_id\":null,\"start\":1592188241378155785,\"duration\":25760366,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241403758513
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241403758513 span-id:1592188241404459091] [http_server_warp::warp_serv] Starting auth for auth=BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241403758513 span-id:1592188241404459091] [datadog_apm_sync::client] New span on trace: 1592188241403758513
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241403758513 span-id:1592188241404475381] [http_server_warp] Confirming auth token: BearerToken { token: "good" }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241372859618 on thread 1592188241344145101
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241405664379 on thread 1592188241344145101
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241403758513, id: 1592188241404459091, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", start: 2020-06-15T02:30:41.404459368Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241403758513/1592188241404459091
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241403758513, id: 1592188241404475381, name: "auth_process", resource: "http_server_warp", start: 2020-06-15T02:30:41.404475642Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241403758513/1592188241404475381
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241372859618/1592188241378805265
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241372859618/1592188241378805265
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241372859618/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241377366818, trace_id: 1592188241372859618, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241373811431), start: 2020-06-15T02:30:41.377367120Z, duration: Duration { secs: 0, nanos: 1203354 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241373811431, trace_id: 1592188241372859618, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241373788442), start: 2020-06-15T02:30:41.373811800Z, duration: Duration { secs: 0, nanos: 4808084 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241373788442, trace_id: 1592188241372859618, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241374892778), start: 2020-06-15T02:30:41.373788875Z, duration: Duration { secs: 0, nanos: 4845728 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241378756252, trace_id: 1592188241372859618, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241374892778), start: 2020-06-15T02:30:41.378756738Z, duration: Duration { secs: 0, nanos: 24566 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241403223550, trace_id: 1592188241372859618, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241378805265), start: 2020-06-15T02:30:41.403223896Z, duration: Duration { secs: 0, nanos: 14224 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241378805265, trace_id: 1592188241372859618, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241374892778), start: 2020-06-15T02:30:41.378805775Z, duration: Duration { secs: 0, nanos: 26810605 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241374892778, trace_id: 1592188241372859618, name: "1592188241372859618-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.373788875Z, duration: Duration { secs: 0, nanos: 32998274 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241372859618,\"span_id\":1592188241377366818,\"parent_id\":1592188241373811431,\"start\":1592188241377367120,\"duration\":1203354,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241372859618,\"span_id\":1592188241373811431,\"parent_id\":1592188241373788442,\"start\":1592188241373811800,\"duration\":4808084,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241372859618,\"span_id\":1592188241373788442,\"parent_id\":1592188241374892778,\"start\":1592188241373788875,\"duration\":4845728,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241372859618,\"span_id\":1592188241378756252,\"parent_id\":1592188241374892778,\"start\":1592188241378756738,\"duration\":24566,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241372859618,\"span_id\":1592188241403223550,\"parent_id\":1592188241378805265,\"start\":1592188241403223896,\"duration\":14224,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241372859618,\"span_id\":1592188241378805265,\"parent_id\":1592188241374892778,\"start\":1592188241378805775,\"duration\":26810605,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241372859618-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241372859618,\"span_id\":1592188241374892778,\"parent_id\":null,\"start\":1592188241373788875,\"duration\":32998274,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241403758513 span-id:1592188241404475381] [datadog_apm_sync::client] New span on trace: 1592188241403758513
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241403758513
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] New span on trace: 1592188241403758513
2020-06-15 02:30:41+0000 DEBUG [trace-id:1592188241403758513 span-id:1592188241410588811] [api_consumers::http_server] Running query: for id: UserIdentity { token: "good", user_id: Some("good"), authenticated: true, impersonation: None, auth_expiration: None } = GraphQLRequest { query: "{ getConsumerId }", operation_name: None, variables: None }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241403758513, id: 1592188241408804593, name: "confirm_auth", resource: "authentication_config::http_auth", start: 2020-06-15T02:30:41.408805018Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241403758513/1592188241408804593
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241403758513/1592188241408804593
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241403758513/1592188241408804593
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241403758513/1592188241404475381
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241403758513/1592188241404475381
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241403758513/1592188241404459091
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241403758513/1592188241404459091
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241403758513, id: 1592188241410540837, name: "query_map_to_graphql", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.410541239Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241403758513/1592188241410540837
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241403758513/1592188241410540837
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241403758513/1592188241410540837
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241403758513, id: 1592188241410588811, name: "execute_graphql_query", resource: "api_consumers::http_server", start: 2020-06-15T02:30:41.410589197Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241403758513/1592188241410588811
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241388493896 span-id:1592188241395186027] [datadog_apm_sync::client] New span on trace: 1592188241388493896
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241388493896 span-id:1592188241395186027] [api_consumers::graphql] In trace id: 1592188241388493896 on thread 1592188241357466594
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241386519731 span-id:1592188241393474708] [datadog_apm_sync::client] New span on trace: 1592188241386519731
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241386519731 span-id:1592188241393474708] [api_consumers::graphql] In trace id: 1592188241386519731 on thread 1592188241358284514
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241388493896, id: 1592188241411599358, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.411599808Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241388493896/1592188241411599358
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241388493896/1592188241411599358
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241388493896/1592188241411599358
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241386519731, id: 1592188241411706366, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.411706744Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241386519731/1592188241411706366
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241386519731/1592188241411706366
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241386519731/1592188241411706366
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241388493896/1592188241395186027
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241388493896/1592188241395186027
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241388493896 on thread 1592188241357466594
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241413826590 on thread 1592188241357466594
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241388493896/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241393394941, trace_id: 1592188241388493896, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241389262591), start: 2020-06-15T02:30:41.393395430Z, duration: Duration { secs: 0, nanos: 1616921 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241389262591, trace_id: 1592188241388493896, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241389237258), start: 2020-06-15T02:30:41.389262927Z, duration: Duration { secs: 0, nanos: 5812498 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241389237258, trace_id: 1592188241388493896, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241391948704), start: 2020-06-15T02:30:41.389237748Z, duration: Duration { secs: 0, nanos: 5842588 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241395155958, trace_id: 1592188241388493896, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241391948704), start: 2020-06-15T02:30:41.395156306Z, duration: Duration { secs: 0, nanos: 15477 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241411599358, trace_id: 1592188241388493896, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241395186027), start: 2020-06-15T02:30:41.411599808Z, duration: Duration { secs: 0, nanos: 19040 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241395186027, trace_id: 1592188241388493896, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241391948704), start: 2020-06-15T02:30:41.395186358Z, duration: Duration { secs: 0, nanos: 18561488 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241391948704, trace_id: 1592188241388493896, name: "1592188241388493896-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.389237748Z, duration: Duration { secs: 0, nanos: 24757451 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241386519731 on thread 1592188241358284514
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241414489677 on thread 1592188241358284514
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241388493896,\"span_id\":1592188241393394941,\"parent_id\":1592188241389262591,\"start\":1592188241393395430,\"duration\":1616921,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241388493896,\"span_id\":1592188241389262591,\"parent_id\":1592188241389237258,\"start\":1592188241389262927,\"duration\":5812498,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241388493896,\"span_id\":1592188241389237258,\"parent_id\":1592188241391948704,\"start\":1592188241389237748,\"duration\":5842588,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241388493896,\"span_id\":1592188241395155958,\"parent_id\":1592188241391948704,\"start\":1592188241395156306,\"duration\":15477,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241388493896,\"span_id\":1592188241411599358,\"parent_id\":1592188241395186027,\"start\":1592188241411599808,\"duration\":19040,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241388493896,\"span_id\":1592188241395186027,\"parent_id\":1592188241391948704,\"start\":1592188241395186358,\"duration\":18561488,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241388493896-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241388493896,\"span_id\":1592188241391948704,\"parent_id\":null,\"start\":1592188241389237748,\"duration\":24757451,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241386519731/1592188241393474708
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241386519731/1592188241393474708
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241386519731/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241391584774, trace_id: 1592188241386519731, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241387373744), start: 2020-06-15T02:30:41.391585213Z, duration: Duration { secs: 0, nanos: 1684055 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241387373744, trace_id: 1592188241386519731, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241387356418), start: 2020-06-15T02:30:41.387374091Z, duration: Duration { secs: 0, nanos: 5948133 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241387356418, trace_id: 1592188241386519731, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241388450882), start: 2020-06-15T02:30:41.387356770Z, duration: Duration { secs: 0, nanos: 5971608 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241393434879, trace_id: 1592188241386519731, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241388450882), start: 2020-06-15T02:30:41.393435296Z, duration: Duration { secs: 0, nanos: 19269 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241411706366, trace_id: 1592188241386519731, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241393474708), start: 2020-06-15T02:30:41.411706744Z, duration: Duration { secs: 0, nanos: 36370 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241393474708, trace_id: 1592188241386519731, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241388450882), start: 2020-06-15T02:30:41.393475100Z, duration: Duration { secs: 0, nanos: 20984656 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241388450882, trace_id: 1592188241386519731, name: "1592188241386519731-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.387356770Z, duration: Duration { secs: 0, nanos: 28499632 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241386519731,\"span_id\":1592188241391584774,\"parent_id\":1592188241387373744,\"start\":1592188241391585213,\"duration\":1684055,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241386519731,\"span_id\":1592188241387373744,\"parent_id\":1592188241387356418,\"start\":1592188241387374091,\"duration\":5948133,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241386519731,\"span_id\":1592188241387356418,\"parent_id\":1592188241388450882,\"start\":1592188241387356770,\"duration\":5971608,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241386519731,\"span_id\":1592188241393434879,\"parent_id\":1592188241388450882,\"start\":1592188241393435296,\"duration\":19269,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241386519731,\"span_id\":1592188241411706366,\"parent_id\":1592188241393474708,\"start\":1592188241411706744,\"duration\":36370,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241386519731,\"span_id\":1592188241393474708,\"parent_id\":1592188241388450882,\"start\":1592188241393475100,\"duration\":20984656,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241386519731-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241386519731,\"span_id\":1592188241388450882,\"parent_id\":null,\"start\":1592188241387356770,\"duration\":28499632,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241403758513 span-id:1592188241410588811] [datadog_apm_sync::client] New span on trace: 1592188241403758513
2020-06-15 02:30:41+0000 TRACE [trace-id:1592188241403758513 span-id:1592188241410588811] [api_consumers::graphql] In trace id: 1592188241403758513 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] NEW SPAN: NewSpanData { trace_id: 1592188241403758513, id: 1592188241429083076, name: "get_consumer_id", resource: "api_consumers::graphql", start: 2020-06-15T02:30:41.429083608Z }
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] ENTER SPAN: 1592188241403758513/1592188241429083076
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241403758513/1592188241429083076
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241403758513/1592188241429083076
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EXIT SPAN: 1592188241403758513/1592188241410588811
2020-06-15 02:30:41+0000 TRACE [http_server_warp::warp_serv] Sending trace data to datadog
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] CLOSE SPAN: 1592188241403758513/1592188241410588811
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent old trace: 1592188241403758513 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Starting new trace: 1592188241431230403 on thread 1592188241352869627
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] EVENT: 1592188241403758513/[("send_trace", "true")]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending spans: [Span { id: 1592188241408804593, trace_id: 1592188241403758513, name: "confirm_auth", resource: "authentication_config::http_auth", parent_id: Some(1592188241404475381), start: 2020-06-15T02:30:41.408805018Z, duration: Duration { secs: 0, nanos: 1560430 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241404475381, trace_id: 1592188241403758513, name: "auth_process", resource: "http_server_warp", parent_id: Some(1592188241404459091), start: 2020-06-15T02:30:41.404475642Z, duration: Duration { secs: 0, nanos: 5940098 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241404459091, trace_id: 1592188241403758513, name: "auth_get_request_data", resource: "http_server_warp::warp_serv", parent_id: Some(1592188241406161439), start: 2020-06-15T02:30:41.404459368Z, duration: Duration { secs: 0, nanos: 5961763 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241410540837, trace_id: 1592188241403758513, name: "query_map_to_graphql", resource: "api_consumers::http_server", parent_id: Some(1592188241406161439), start: 2020-06-15T02:30:41.410541239Z, duration: Duration { secs: 0, nanos: 18784 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241429083076, trace_id: 1592188241403758513, name: "get_consumer_id", resource: "api_consumers::graphql", parent_id: Some(1592188241410588811), start: 2020-06-15T02:30:41.429083608Z, duration: Duration { secs: 0, nanos: 27921 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241410588811, trace_id: 1592188241403758513, name: "execute_graphql_query", resource: "api_consumers::http_server", parent_id: Some(1592188241406161439), start: 2020-06-15T02:30:41.410589197Z, duration: Duration { secs: 0, nanos: 20581602 }, error: None, http: None, sql: None, tags: {} }, Span { id: 1592188241406161439, trace_id: 1592188241403758513, name: "1592188241403758513-traceparent", resource: "http_server_warp::warp_serv", parent_id: None, start: 2020-06-15T02:30:41.404459368Z, duration: Duration { secs: 0, nanos: 26882911 }, error: None, http: None, sql: None, tags: {} }]
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sending to localhost agent payload: "[[{\"service\":\"api-consumers\",\"name\":\"confirm_auth\",\"resource\":\"authentication_config::http_auth\",\"trace_id\":1592188241403758513,\"span_id\":1592188241408804593,\"parent_id\":1592188241404475381,\"start\":1592188241408805018,\"duration\":1560430,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_process\",\"resource\":\"http_server_warp\",\"trace_id\":1592188241403758513,\"span_id\":1592188241404475381,\"parent_id\":1592188241404459091,\"start\":1592188241404475642,\"duration\":5940098,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"auth_get_request_data\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241403758513,\"span_id\":1592188241404459091,\"parent_id\":1592188241406161439,\"start\":1592188241404459368,\"duration\":5961763,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"query_map_to_graphql\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241403758513,\"span_id\":1592188241410540837,\"parent_id\":1592188241406161439,\"start\":1592188241410541239,\"duration\":18784,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"get_consumer_id\",\"resource\":\"api_consumers::graphql\",\"trace_id\":1592188241403758513,\"span_id\":1592188241429083076,\"parent_id\":1592188241410588811,\"start\":1592188241429083608,\"duration\":27921,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"execute_graphql_query\",\"resource\":\"api_consumers::http_server\",\"trace_id\":1592188241403758513,\"span_id\":1592188241410588811,\"parent_id\":1592188241406161439,\"start\":1592188241410589197,\"duration\":20581602,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"},{\"service\":\"api-consumers\",\"name\":\"1592188241403758513-traceparent\",\"resource\":\"http_server_warp::warp_serv\",\"trace_id\":1592188241403758513,\"span_id\":1592188241406161439,\"parent_id\":null,\"start\":1592188241404459368,\"duration\":26882911,\"error\":0,\"meta\":{\"env\":\"staging-01\"},\"metrics\":{\"_sampling_priority_v1\":1.0},\"type\":\"custom\"}]]"
2020-06-15 02:30:41+0000 TRACE [datadog_apm_sync::client] Sent to localhost agent: Response { status: Ok, headers: Headers { Date: Mon, 15 Jun 2020 02:30:41 GMT
, Content-Length: 3
, Content-Type: text/plain; charset=utf-8
, }, version: Http11, url: "http://localhost:8126/v0.3/traces", status_raw: RawStatus(200, "OK"), message: Http11Message { is_proxied: false, method: None, stream: Wrapper { obj: Some(Reading(SizedReader(remaining=3))) } } }
test test_blast ... test test_blast has been running for over 60 seconds
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs:97:9
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
2020-06-15 02:31:11+0000 TRACE [reqwest::client] response receiver is canceled
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_taskthread '
tokio-runtime-worker             at ' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")/home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs', :tests/load_test.rs348:
97:9
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::2020-06-15 02:31:11+0000 TRACE [reqwest::client] response receiver is canceled
{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<Tthread '>tokio-runtime-worker::' panicked at 'setcalled `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")
',              at tests/load_test.rs/home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs::9763:
9
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::2020-06-15 02:31:11+0000 TRACE [reqwest::client] response receiver is canceled
runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
 thread ' 53tokio-runtime-worker: ' panicked at 'stdcalled `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")::', panictests/load_test.rs:::catch_unwind97
:             at 9/home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs
:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S2020-06-15 02:31:11+0000 TRACE [reqwest::client] response receiver is canceled
>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:thread '14
tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D") ',  tests/load_test.rs19: :tokio97:::runtime::9task
::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops2020-06-15 02:31:11+0000 TRACE [reqwest::client] response receiver is canceled
::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::thread 'polltokio-runtime-worker
' panicked at '             at called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")/home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs', :tests/load_test.rs38:
97:9
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::2020-06-15 02:31:11+0000 TRACE [reqwest::client] response receiver is canceled
poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at thread '/home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rstokio-runtime-worker:' panicked at '232called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")
', tests/load_test.rs:97 : 9
49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::2020-06-15 02:31:11+0000 TRACE [reqwest::client] response receiver is canceled
runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
thread 'tokio-runtime-worker' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Io(Custom { kind: TimedOut, error: "timed out" }), "http://127.0.0.1:28080/paidy/consumers/graphql?query=%7B+getConsumerId+%7D")', tests/load_test.rs:97:9
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/libunwind.rs:86
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.46/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print_fmt
             at src/libstd/sys_common/backtrace.rs:78
   3: <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt
             at src/libstd/sys_common/backtrace.rs:59
2020-06-15 02:31:11+0000 TRACE [reqwest::client] response receiver is canceled
   4: core::fmt::write
             at src/libcore/fmt/mod.rs:1076
   5: std::io::Write::write_fmt
             at src/libstd/io/mod.rs:1537
   6: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:62
   7: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:49
   8: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:198
   9: std::panicking::default_hook
             at src/libstd/panicking.rs:218
  10: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
  11: rust_begin_unwind
             at src/libstd/panicking.rs:385
  12: core::panicking::panic_fmt
             at src/libcore/panicking.rs:86
  13: core::option::expect_none_failed
             at src/libcore/option.rs:1272
  14: core::result::Result<T,E>::unwrap
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/result.rs:1005
  15: load_test::request_job::{{closure}}
             at tests/load_test.rs:97
  16: <core::future::from_generator::GenFuture<T> as core::future::future::Future>::poll
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/future/mod.rs:73
  17: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  18: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  19: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  20: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  21: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  22: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  23: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  24: __rust_try
  25: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  26: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  27: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  28: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  29: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  30: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  31: tokio::runtime::thread_pool::worker::Context::run_task::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:349
  32: tokio::coop::with_budget::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:127
  33: std::thread::local::LocalKey<T>::try_with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:263
  34: std::thread::local::LocalKey<T>::with
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/thread/local.rs:239
  35: tokio::coop::with_budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:120
  36: tokio::coop::budget
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs:96
  37: tokio::runtime::thread_pool::worker::Context::run_task
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:348
  38: tokio::runtime::thread_pool::worker::Context::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:320
  39: tokio::runtime::thread_pool::worker::run::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:305
  40: tokio::macros::scoped_tls::ScopedKey<T>::set
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs:63
  41: tokio::runtime::thread_pool::worker::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:302
  42: tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/thread_pool/worker.rs:281
  43: <tokio::runtime::blocking::task::BlockingTask<T> as core::future::future::Future>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/task.rs:38
  44: tokio::runtime::task::core::Core<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:173
  45: tokio::loom::std::unsafe_cell::UnsafeCell<T>::with_mut
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs:14
  46: tokio::runtime::task::core::Core<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs:158
  47: tokio::runtime::task::harness::Harness<T,S>::poll::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:107
  48: core::ops::function::FnOnce::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libcore/ops/function.rs:232
  49: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:318
  50: std::panicking::try::do_call
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:297
  51: __rust_try
  52: std::panicking::try
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panicking.rs:274
  53: std::panic::catch_unwind
             at /home/micucci/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/libstd/panic.rs:394
  54: tokio::runtime::task::harness::Harness<T,S>::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs:89
  55: tokio::runtime::task::raw::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:104
  56: tokio::runtime::task::raw::RawTask::poll
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs:66
  57: tokio::runtime::task::Notified<S>::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs:169
  58: tokio::runtime::blocking::pool::Inner::run
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:230
  59: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:210
  60: tokio::runtime::context::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs:72
  61: tokio::runtime::handle::Handle::enter
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs:76
  62: tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}
             at /home/micucci/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/pool.rs:209
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.
test test_blast ... FAILED

failures:

failures:
    test_blast

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out

error: test failed, to rerun pass '-p api-consumers --test load_test'

Process finished with exit code 101
:
